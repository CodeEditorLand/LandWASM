// Place your settings in this file to overwrite default and user settings.
{
	"git.branchProtection": [
		"main"
	],
	"git.branchProtectionPrompt": "alwaysCommitToNewBranch",
	"editor.insertSpaces": false,
	"[markdown][typescript]": {
		"editor.rulers": [
			80
		]
	},
	"files.eol": "\n",
	"files.trimTrailingWhitespace": true,

	"typescript.tsdk": "./node_modules/typescript/lib",
	"typescript.tsc.autoDetect": "off",
	"typescript.tsserver.trace": "off",
	"typescript.format.insertSpaceAfterCommaDelimiter": true,
	"typescript.format.insertSpaceAfterSemicolonInForStatements": true,
	"typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
	"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
	"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
	"typescript.format.placeOpenBraceOnNewLineForFunctions": false,
	"typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,

	"javascript.validate.enable": true,

	"eslint.format.enable": true,
	"eslint.enable": true,
	"eslint.validate": [
		"typescript"
	],
	"eslint.useESLintClass": true,
	"eslint.workingDirectories": [
		"./sync-api-common",
		"./sync-api-client",
		"./sync-api-service",
		"./sync-api-tests",
		"./wasm-component-model",
		"./wasi",
		"./wasm-wasi-kit",
		"./vscode-rust-api",
		"./wasm-wasi-core",
		"./wasm-wasi",
		"./webshell",
		"./tools",
		"./testbeds",
		"./preview2"
	],
	"editor.codeActionsOnSave": {
		"source.fixAll.eslint": "explicit"
	},
	"mochaExplorer.files": [
		"sync-api-common/lib/node/test/*.test.js",
		"wasm-wasi-tests/lib/*.test.js"
	],
	"mochaExplorer.ui": "tdd",
	"mochaExplorer.require": "source-map-support/register",
	"cSpell.words": [
		"abstime",
		"acces",
		"addrinuse",
		"addrnotavail",
		"afnosupport",
		"atim",
		"badf",
		"badmsg",
		"basenc",
		"BÃ¤umer",
		"callables",
		"Ciovec",
		"ciovecs",
		"ciovs",
		"clazz",
		"clockid",
		"connaborted",
		"connreset",
		"conztructor",
		"coreutils",
		"cputime",
		"creat",
		"cstring",
		"ctim",
		"datalen",
		"deadlk",
		"destaddrreq",
		"dircookie",
		"dirflags",
		"dirnamlen",
		"dontneed",
		"dquot",
		"dsync",
		"DTOs",
		"esbuild",
		"ESUCCESS",
		"eventrwflags",
		"eventtype",
		"externref",
		"extlocfs",
		"fadvise",
		"fallocate",
		"fbig",
		"fcntl",
		"fdflags",
		"fdstat",
		"filedelta",
		"filesize",
		"filestat",
		"fstflags",
		"fullpath",
		"futimens",
		"GETFL",
		"getres",
		"gettime",
		"hostunreach",
		"idrm",
		"ilseq",
		"inval",
		"iovec",
		"iovecs",
		"iovs",
		"isconn",
		"isdir",
		"jarray",
		"jvalue",
		"linkat",
		"linkcount",
		"lookupflags",
		"lseek",
		"memfs",
		"MERCHANTABLITY",
		"mfile",
		"mkdirat",
		"mlink",
		"msgsize",
		"mtim",
		"multihop",
		"nametoolong",
		"namlen",
		"nbytes",
		"netdown",
		"netreset",
		"netunreach",
		"nfile",
		"nobufs",
		"nodefs",
		"nodev",
		"noent",
		"noexec",
		"nolck",
		"nomsg",
		"nonblock",
		"noprotoopt",
		"noreuse",
		"nospc",
		"nosys",
		"notcapable",
		"notconn",
		"notdir",
		"notempty",
		"notrecoverable",
		"notsock",
		"notsup",
		"notty",
		"nxio",
		"oflags",
		"oneoff",
		"openat",
		"ownerdead",
		"Pollable",
		"pollables",
		"postpublish",
		"pread",
		"preadv",
		"preopened",
		"preopentype",
		"prestat",
		"printenv",
		"protonosupport",
		"Pseudoterminal",
		"pwrite",
		"pwritev",
		"PYTHONPATH",
		"readlinkat",
		"realloc",
		"REMOVEDIR",
		"renameat",
		"riflags",
		"roflags",
		"rofs",
		"sarray",
		"sched",
		"sdflags",
		"SETFL",
		"siflags",
		"sobject",
		"spipe",
		"srch",
		"subclockflags",
		"svalue",
		"symlinkat",
		"timedout",
		"toobig",
		"tsbuild",
		"txtbsy",
		"unexpand",
		"unlinkat",
		"userdata",
		"utimensat",
		"vdir",
		"vrfs",
		"vscfs",
		"waitall",
		"webshell",
		"wesh",
		"willneed",
		"wstring",
		"xdev",
		"Xvfb"
	],
	"files.associations": {
		"iostream": "cpp",
		"malloc.h": "c"
	},
	"task.allowAutomaticTasks": "on",
	"rust-analyzer.linkedProjects": [
		"./testbeds/lsp-rust/server/Cargo.toml",
		"./testbeds/rust/Cargo.toml",
		"./testbeds/rust-threads/Cargo.toml",
		"./testbeds/component-model/Cargo.toml",
		"./testbeds/component-model-performance/Cargo.toml",
		"./testbeds/component-model-vscode/Cargo.toml",
		"./vscode-rust-api/rust/Cargo.toml",
		"./testbeds/component-model-vscode-2/Cargo.toml"
	],
	"typescript.tsserver.experimental.useVsCodeWatcher": true,
}