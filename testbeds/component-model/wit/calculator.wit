// wit/calculator.wit
package vscode:example;

interface types {
	record operands {
		left: u32,
		right: u32
	}

	variant operation {
		add(operands),
		sub(operands),
		mul(operands),
		div(operands)
	}

	record position {
		line: u32,
		character: u32
	}

	record range {
		start: position,
		end: position
	}

	record text-document-content-change-event {
		range: range,
		range-offset: u32,
		range-length: u32,
		text: string
	}

	resource text-document {
		uri: func() -> string;
		language-id: func() -> string;
		version: func() -> u32;
		get-text: func() -> string;
	}

	enum text-document-change-reason {
		undo,
		redo
	}

	record text-document-change-event {
		document: text-document,
		content-changes: list<text-document-content-change-event>,
		reason: option<text-document-change-reason>
	}

	resource output-channel {
		name: func() -> string;
    	append: func(value: string);
        append-line: func(value: string);
        clear: func();
		show: func();
	}
}


interface window {
	use types.{ output-channel };
	create-output-channel: func(name: string, language-id: option<string>) -> output-channel;
}

interface workspace {
	register-on-did-change-text-document: func();
}

interface workspace-events {
	use types.{ text-document-change-event };
	did-change-text-document: func(id: string, event: text-document-change-event);
}

interface commands {
	register: func(command: string);
}

interface commands-events {
	execute: func(command: string);
}

world calculator {
	use types.{ operation };
	import workspace;
	import commands;
	import window;

	export calc: func(o: operation) -> u32;
	export workspace-events;
	export commands-events;
}